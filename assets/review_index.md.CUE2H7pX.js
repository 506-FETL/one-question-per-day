import{_ as d,c as a,o as e,ah as r}from"./chunks/framework.CIgZr41i.js";const c=JSON.parse('{"title":"🗃 Reviews","description":"","frontmatter":{"next":{"text":"Day 01","link":"/review/01"}},"headers":[],"relativePath":"review/index.md","filePath":"review/index.md","lastUpdated":1758588368000}'),s={name:"review/index.md"};function h(i,t,o,b,n,f){return e(),a("div",null,[...t[0]||(t[0]=[r('<h1 id="🗃-reviews" tabindex="-1">🗃 Reviews <a class="header-anchor" href="#🗃-reviews" aria-label="Permalink to “🗃 Reviews”">​</a></h1><h3 id="base" tabindex="-1">Base <a class="header-anchor" href="#base" aria-label="Permalink to “Base”">​</a></h3><table tabindex="0"><thead><tr><th>Day</th><th>标题</th><th>标签</th></tr></thead><tbody><tr><td><a href="./base/01">01</a></td><td>归并排序（JS 实现与分治递归）</td><td>分治 / 排序</td></tr><tr><td><a href="./base/02">02</a></td><td>generator 转 async 封装流程</td><td>异步转换</td></tr><tr><td><a href="./base/03">03</a></td><td>精简版 Vue 响应式机制实现</td><td>响应式 / Proxy</td></tr><tr><td><a href="./base/04">04</a></td><td>sum() 柯里化与类型转换判等</td><td>柯里化 / 函数式</td></tr><tr><td><a href="./base/05">05</a></td><td>深拷贝实现（循环 / 各类内建）</td><td>内存结构 / 引用处理</td></tr><tr><td><a href="./base/06">06</a></td><td>Array.from 语义与 Polyfill</td><td>规范 / 可迭代</td></tr><tr><td><a href="./base/07">07</a></td><td>中间件机制（链式与错误传播）</td><td>设计模式 / 控制流</td></tr><tr><td><a href="./base/08">08</a></td><td>Promise 核心实现（状态/链式）</td><td>异步 / 微任务</td></tr><tr><td><a href="./base/09">09</a></td><td>二叉树垂直遍历（多维排序）</td><td>树 / 坐标排序</td></tr><tr><td><a href="./base/10">10</a></td><td>call/apply/bind/new/instanceof 实现</td><td>this / 原型链</td></tr><tr><td><a href="./base/11">11</a></td><td>Fiber 副作用收集遍历模型</td><td>Fiber / 深度遍历</td></tr><tr><td><a href="./base/12">12</a></td><td>compose 函数组合与异步串联</td><td>函数管道</td></tr><tr><td><a href="./base/13">13</a></td><td>Proxy 链式加法 add 题解析</td><td>Proxy / 隐式转换</td></tr><tr><td><a href="./base/14">14</a></td><td>Observable 基础发布订阅</td><td>观察者模式</td></tr><tr><td><a href="./base/15">15</a></td><td>myCall 行为与 this 绑定边界</td><td>this / 规范细节</td></tr><tr><td><a href="./base/16">16</a></td><td>千位分隔符格式化策略</td><td>字符串处理</td></tr><tr><td><a href="./base/17">17</a></td><td>数组去重与稀疏位处理</td><td>数组 / 去重策略</td></tr><tr><td><a href="./base/18">18</a></td><td>迷你 Jest 断言机制</td><td>测试 / 断言</td></tr></tbody></table><h3 id="framework" tabindex="-1">Framework <a class="header-anchor" href="#framework" aria-label="Permalink to “Framework”">​</a></h3><table tabindex="0"><thead><tr><th>Day</th><th>标题</th><th>标签</th></tr></thead><tbody><tr><td><a href="./framework/01">01</a></td><td>Button 组件实现</td><td>封装/组件化</td></tr><tr><td><a href="./framework/02">02</a></td><td>React实现slot</td><td>插槽</td></tr></tbody></table>',5)])])}const m=d(s,[["render",h]]);export{c as __pageData,m as default};
