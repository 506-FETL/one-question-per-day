import{_ as a,c as d,o as i,ah as e}from"./chunks/framework.jwzkA-U9.js";const c=JSON.parse('{"title":"Reviews","description":"","frontmatter":{"next":{"text":"Day 01","link":"/review/01"}},"headers":[],"relativePath":"review/index.md","filePath":"review/index.md","lastUpdated":1755942637000}'),r={name:"review/index.md"};function l(s,t,h,n,o,y){return i(),d("div",null,[...t[0]||(t[0]=[e(`<h1 id="reviews" tabindex="-1">Reviews <a class="header-anchor" href="#reviews" aria-label="Permalink to “Reviews”">​</a></h1><p>本页汇总全部「复盘文档」：聚焦题目背后的 思路拆解 / 原理推导 / 易错点 / 可扩展方向。建议：刷题当天完成基础实现，隔日用 5~10 分钟阅读与补充复盘 → 形成“二次记忆 + 方法论沉淀”。</p><h2 id="🔍-快速导航" tabindex="-1">🔍 快速导航 <a class="header-anchor" href="#🔍-快速导航" aria-label="Permalink to “🔍 快速导航”">​</a></h2><ul><li>最近新增：Day 18 · 迷你 Jest 断言机制</li><li>推荐先补的核心通用能力：深拷贝 (Day 05) / Promise (Day 08) / call &amp; apply &amp; bind (Day 10 &amp; 15) / Compose (Day 12)</li><li>数据结构线：Day 01（分治）→ Day 09（树遍历）→ Day 11（Fiber 树）</li><li>工程与工具链：Day 07（中间件模式）→ Day 18（测试框架雏形）</li></ul><h2 id="🗃-题目索引-精简表" tabindex="-1">🗃 题目索引（精简表） <a class="header-anchor" href="#🗃-题目索引-精简表" aria-label="Permalink to “🗃 题目索引（精简表）”">​</a></h2><table tabindex="0"><thead><tr><th>Day</th><th>链接</th><th>标题</th><th>标签</th></tr></thead><tbody><tr><td>01</td><td><a href="./01">Day 01</a></td><td>归并排序（JS 实现与分治递归）</td><td>分治 / 排序</td></tr><tr><td>02</td><td><a href="./02">Day 02</a></td><td>generator 转 async 封装流程</td><td>异步转换</td></tr><tr><td>03</td><td><a href="./03">Day 03</a></td><td>精简版 Vue 响应式机制实现</td><td>响应式 / Proxy</td></tr><tr><td>04</td><td><a href="./04">Day 04</a></td><td>sum() 柯里化与类型转换判等</td><td>柯里化 / 函数式</td></tr><tr><td>05</td><td><a href="./05">Day 05</a></td><td>深拷贝实现（循环 / 各类内建）</td><td>内存结构 / 引用处理</td></tr><tr><td>06</td><td><a href="./06">Day 06</a></td><td>Array.from 语义与 Polyfill</td><td>规范 / 可迭代</td></tr><tr><td>07</td><td><a href="./07">Day 07</a></td><td>中间件机制（链式与错误传播）</td><td>设计模式 / 控制流</td></tr><tr><td>08</td><td><a href="./08">Day 08</a></td><td>Promise 核心实现（状态/链式）</td><td>异步 / 微任务</td></tr><tr><td>09</td><td><a href="./09">Day 09</a></td><td>二叉树垂直遍历（多维排序）</td><td>树 / 坐标排序</td></tr><tr><td>10</td><td><a href="./10">Day 10</a></td><td>call/apply/bind/new/instanceof 实现</td><td>this / 原型链</td></tr><tr><td>11</td><td><a href="./11">Day 11</a></td><td>Fiber 副作用收集遍历模型</td><td>Fiber / 深度遍历</td></tr><tr><td>12</td><td><a href="./12">Day 12</a></td><td>compose 函数组合与异步串联</td><td>函数管道</td></tr><tr><td>13</td><td><a href="./13">Day 13</a></td><td>Proxy 链式加法 add 题解析</td><td>Proxy / 隐式转换</td></tr><tr><td>14</td><td><a href="./14">Day 14</a></td><td>Observable 基础发布订阅</td><td>观察者模式</td></tr><tr><td>15</td><td><a href="./15">Day 15</a></td><td>myCall 行为与 this 绑定边界</td><td>this / 规范细节</td></tr><tr><td>16</td><td><a href="./16">Day 16</a></td><td>千位分隔符格式化策略</td><td>字符串处理</td></tr><tr><td>17</td><td><a href="./17">Day 17</a></td><td>数组去重与稀疏位处理</td><td>数组 / 去重策略</td></tr><tr><td>18</td><td><a href="./18">Day 18</a></td><td>迷你 Jest 断言机制</td><td>测试 / 断言</td></tr></tbody></table><h2 id="🧭-学习路径建议" tabindex="-1">🧭 学习路径建议 <a class="header-anchor" href="#🧭-学习路径建议" aria-label="Permalink to “🧭 学习路径建议”">​</a></h2><ol><li>入门（语法与执行基础）：Day 10 → Day 15 → Day 05</li><li>异步深化：Day 02 → Day 08 →（扩展）事件循环 / 微任务宏任务差异</li><li>函数式思维：Day 04 → Day 12 →（可扩展）管道 / 柯里化与组合融合</li><li>数据结构与遍历：Day 01 → Day 09 → Day 11 →（延伸）图 / 拓扑排序</li><li>工程与模式：Day 07 → Day 14 → Day 18</li><li>语言底层再强化：Day 13（Proxy + ToPrimitive）→ 回看 Day 10/15 做对比</li></ol><h2 id="🧪-如何自行撰写新的复盘" tabindex="-1">🧪 如何自行撰写新的复盘 <a class="header-anchor" href="#🧪-如何自行撰写新的复盘" aria-label="Permalink to “🧪 如何自行撰写新的复盘”">​</a></h2><p>建议结构：</p><ol><li>题目摘要（一句话问题重述）</li><li>核心考点拆解（列出 3~6 个关键知识点）</li><li>基础实现 + 进阶实现（可对比差异、性能、可读性）</li><li>常见误区 &amp; 边界测试用例</li><li>可扩展方向 / 类似题目类比</li><li>复盘 Checklist（让读者自检）</li></ol><p>推荐模板片段：</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### ✅ 核心知识点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 🧵 复杂度 &amp; 设计取舍</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 时间：</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 空间：</span></span></code></pre></div><h2 id="🔄-后续自动化设想" tabindex="-1">🔄 后续自动化设想 <a class="header-anchor" href="#🔄-后续自动化设想" aria-label="Permalink to “🔄 后续自动化设想”">​</a></h2><ul><li>根据 frontmatter 读取标签与难度，自动构建“学习路径”区域</li><li>为每篇复盘生成摘要（脚本截取首段 + 关键列表）</li><li>统计词频 &amp; 高频易错 API（辅助定向巩固）</li></ul><h2 id="🤝-参与方式" tabindex="-1">🤝 参与方式 <a class="header-anchor" href="#🤝-参与方式" aria-label="Permalink to “🤝 参与方式”">​</a></h2><p>提交复盘：<code>feat(review): add Day XX review</code>；补充修订：<code>docs(review): refine Day XX xxx</code>。内容聚焦“解释为什么 / 如何迁移到更通用的套路”，少贴纯代码大段，代码应服务叙述。</p><blockquote><p>如果你希望此页完全自动生成，可再补一个脚本读取 <code>review/</code> 目录首个一级标题 + 标记块，拼装 Markdown。需要可继续提需求。</p></blockquote>`,18)])])}const k=a(r,[["render",l]]);export{c as __pageData,k as default};
