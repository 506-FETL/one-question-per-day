import{_ as a,c as d,o as i,ah as e}from"./chunks/framework.CQPaoDZe.js";const k=JSON.parse('{"title":"题目总览 (Days)","description":"","frontmatter":{"next":{"text":"Day 01","link":"./Day-01"}},"headers":[],"relativePath":"days/index.md","filePath":"days/index.md","lastUpdated":1755921294000}'),s={name:"days/index.md"};function r(l,t,h,n,y,o){return i(),d("div",null,[...t[0]||(t[0]=[e(`<h1 id="题目总览-days" tabindex="-1">题目总览 (Days) <a class="header-anchor" href="#题目总览-days" aria-label="Permalink to “题目总览 (Days)”">​</a></h1><p>沉淀每日一题：聚焦「数据结构 / 算法范式 / JS 原理 / 工程模式」。建议策略：实现优先 → 测试驱动 → 次日复盘 → 标注可抽象的模式与复用点。</p><h2 id="🚦-进度与状态" tabindex="-1">🚦 进度与状态 <a class="header-anchor" href="#🚦-进度与状态" aria-label="Permalink to “🚦 进度与状态”">​</a></h2><table tabindex="0"><thead><tr><th>指标</th><th>数值</th><th>说明</th></tr></thead><tbody><tr><td>已收录题目</td><td>18</td><td>当前 Day-18 截止</td></tr><tr><td>已有复盘</td><td>18</td><td>对应 <code>/review/</code> 全覆盖</td></tr><tr><td>TS 迁移占比</td><td>（手动统计）</td><td>可在后续脚本化标记</td></tr><tr><td>测试覆盖</td><td>100%（按题存在 spec）</td><td>需结合覆盖率报告验证</td></tr></tbody></table><blockquote><p>后续可自动脚本：扫描 <code>problems/days</code> 生成本页 &amp; 标记缺失项（如无测试 / 无 TS / 无复盘）。</p></blockquote><h2 id="📑-题目索引-基础表" tabindex="-1">📑 题目索引（基础表） <a class="header-anchor" href="#📑-题目索引-基础表" aria-label="Permalink to “📑 题目索引（基础表）”">​</a></h2><table tabindex="0"><thead><tr><th>Day</th><th>链接</th><th>标题</th><th>标签</th></tr></thead><tbody><tr><td>01</td><td><a href="./Day-01">Day 01</a></td><td>🎉 JS 版归并排序</td><td>排序 / 分治</td></tr><tr><td>02</td><td><a href="./Day-02">Day 02</a></td><td>生成器转异步函数</td><td>异步封装 / generator</td></tr><tr><td>03</td><td><a href="./Day-03">Day 03</a></td><td>精简 Vue 响应式</td><td>Proxy / 依赖收集</td></tr><tr><td>04</td><td><a href="./Day-04">Day 04</a></td><td>sum() 柯里化判断</td><td>柯里化 / 隐式转换</td></tr><tr><td>05</td><td><a href="./Day-05">Day 05</a></td><td>深拷贝实现</td><td>复制 / 引用处理</td></tr><tr><td>06</td><td><a href="./Day-06">Day 06</a></td><td>myFrom (Array.from)</td><td>Polyfill / 迭代协议</td></tr><tr><td>07</td><td><a href="./Day-07">Day 07</a></td><td>middleware 机制</td><td>设计模式 / 控制流</td></tr><tr><td>08</td><td><a href="./Day-08">Day 08</a></td><td>Promise 实现</td><td>异步 / 状态机</td></tr><tr><td>09</td><td><a href="./Day-09">Day 09</a></td><td>二叉树垂直遍历</td><td>树 / 坐标排序</td></tr><tr><td>10</td><td><a href="./Day-10">Day 10</a></td><td>call/apply/bind/new/instanceof</td><td>this / 原型链</td></tr><tr><td>11</td><td><a href="./Day-11">Day 11</a></td><td>Fiber 树遍历副作用</td><td>Fiber / 深度遍历</td></tr><tr><td>12</td><td><a href="./Day-12">Day 12</a></td><td>compose 函数组合</td><td>函数式管道</td></tr><tr><td>13</td><td><a href="./Day-13">Day 13</a></td><td>add 链式数值</td><td>Proxy / ToPrimitive</td></tr><tr><td>14</td><td><a href="./Day-14">Day 14</a></td><td>Observable</td><td>观察者模式</td></tr><tr><td>15</td><td><a href="./Day-15">Day 15</a></td><td>Function.prototype.call</td><td>this / 绑定规则</td></tr><tr><td>16</td><td><a href="./Day-16">Day 16</a></td><td>千位分隔符</td><td>字符串格式化</td></tr><tr><td>17</td><td><a href="./Day-17">Day 17</a></td><td>数组去重 deduplicate</td><td>数组 / 去重</td></tr><tr><td>18</td><td><a href="./Day-18">Day 18</a></td><td>迷你 Jest 测试</td><td>测试 / 断言</td></tr></tbody></table><h2 id="🧭-推荐学习路径" tabindex="-1">🧭 推荐学习路径 <a class="header-anchor" href="#🧭-推荐学习路径" aria-label="Permalink to “🧭 推荐学习路径”">​</a></h2><ol><li>快速语法 &amp; this：Day 10 → Day 15</li><li>异步掌握：Day 02 → Day 08 （扩展：事件循环）</li><li>函数式抽象：Day 04 → Day 12</li><li>数据结构 / 遍历：Day 01 → Day 09 → Day 11</li><li>工程模式：Day 07 → Day 14 → Day 18</li><li>Proxy &amp; 隐式转换：Day 13 （结合 Day 04 / 05 复盘）</li></ol><h2 id="🧪-测试驱动提示" tabindex="-1">🧪 测试驱动提示 <a class="header-anchor" href="#🧪-测试驱动提示" aria-label="Permalink to “🧪 测试驱动提示”">​</a></h2><p>统一在 <code>*.spec.js</code> 中：</p><ul><li>给出边界输入（空数组 / null 节点 / 重复值）</li><li>对协议实现（Promise、Observable）添加异步断言与竞态测试</li><li>利用覆盖率报告（可后续整合 badge）定位未覆盖逻辑分支</li></ul><h2 id="🤝-如何新增题目" tabindex="-1">🤝 如何新增题目 <a class="header-anchor" href="#🤝-如何新增题目" aria-label="Permalink to “🤝 如何新增题目”">​</a></h2><ol><li><code>problems/days/Day-XX.md</code>：题目描述（保持结构统一：描述 / 输入输出 / 示例 / 进阶）</li><li><code>answer.js</code> + 可选 <code>ts/answer.ts</code></li><li>添加对应 <code>*.spec.js</code>（至少：正常 / 边界 / 异常）</li><li>提交信息：<code>feat(day-xx): 题目简述</code></li><li>若补 TS、复盘：分开提交，方便回溯</li></ol><h2 id="🛠-后续自动化可能" tabindex="-1">🛠 后续自动化可能 <a class="header-anchor" href="#🛠-后续自动化可能" aria-label="Permalink to “🛠 后续自动化可能”">​</a></h2><table tabindex="0"><thead><tr><th>方向</th><th>说明</th></tr></thead><tbody><tr><td>题目索引脚本</td><td>读取文件头部 H1 + 标签注释生成本页</td></tr><tr><td>标签规范化</td><td>约定 frontmatter: <code>tags: [tree, traversal]</code></td></tr><tr><td>统计面板</td><td>生成 JSON -&gt; 前端可视化（完成度环形图）</td></tr><tr><td>缺失检测</td><td>标记缺失：tests / ts / review / tags</td></tr><tr><td>难度评估</td><td>基于标签 + 行数/复杂度打基础分</td></tr></tbody></table><h2 id="📌-标记规范-建议引入" tabindex="-1">📌 标记规范（建议引入） <a class="header-anchor" href="#📌-标记规范-建议引入" aria-label="Permalink to “📌 标记规范（建议引入）”">​</a></h2><p>在题目 Markdown frontmatter：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">traversal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">difficulty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">medium</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">topics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dfs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ordering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">related</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Day-01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Day-11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="⚡-快速入口" tabindex="-1">⚡ 快速入口 <a class="header-anchor" href="#⚡-快速入口" aria-label="Permalink to “⚡ 快速入口”">​</a></h2><ul><li>回到首页：<a href="/">/</a></li><li>复盘索引：<a href="/review/index">/review/index</a></li><li>最新题目：<a href="/days/Day-18">/days/Day-18</a></li></ul><blockquote><p>想让此页完全脚本化？可新增脚本：<code>scripts/gen-days-index.mjs</code> 读取 <code>problems/days</code> 并写回本文件。</p></blockquote>`,22)])])}const c=a(s,[["render",r]]);export{k as __pageData,c as default};
