import{_ as t,c as a,o as r,ah as o}from"./chunks/framework.ZmvssKF5.js";const y=JSON.parse('{"title":"Day 15","description":"","frontmatter":{},"headers":[],"relativePath":"days/Day-15.md","filePath":"days/Day-15.md","lastUpdated":1755921870000}'),l={name:"days/Day-15.md"};function n(c,e,p,d,s,i){return r(),a("div",null,[...e[0]||(e[0]=[o('<h1 id="day-15" tabindex="-1">Day 15 <a class="header-anchor" href="#day-15" aria-label="Permalink to “Day 15”">​</a></h1><h1 id="function-prototype-call" tabindex="-1">Function.prototype.call <a class="header-anchor" href="#function-prototype-call" aria-label="Permalink to “Function.prototype.call”">​</a></h1><p><a href="https://tc39.es/ecma262/#sec-function.prototype.call" target="_blank" rel="noreferrer">Function.prototype.call</a>可以用来很方便的修改函数的this。</p><p>你能实现一个myCall来模拟Function.prototype.call吗？</p><p>根据最新的 <a href="https://tc39.es/ecma262/#sec-function.prototype.call" target="_blank" rel="noreferrer">ECMAScript spec</a>，thisArg 不会被类型转换，在 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noreferrer">Strict Mode</a>下也不会被更改为window。</p><p>你的代码需要遵从上述逻辑，实现非strict mode的情况。</p><p>Function.prototype.call/apply/bind和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply" target="_blank" rel="noreferrer">Reflect.apply</a> 可以了解，但请不要在这里使用。</p><h2 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to “代码”">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>路径</th></tr></thead><tbody><tr><td>JS 答案</td><td>problems/days/Day 15/answer.js</td></tr></tbody></table>',9)])])}const f=t(l,[["render",n]]);export{y as __pageData,f as default};
