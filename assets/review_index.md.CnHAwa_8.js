import{_ as d,c as a,o as e,ah as r}from"./chunks/framework.COefAqG0.js";const c=JSON.parse('{"title":"Reviews","description":"","frontmatter":{"next":{"text":"Day 01","link":"/review/01"}},"headers":[],"relativePath":"review/index.md","filePath":"review/index.md","lastUpdated":1756866356000}'),i={name:"review/index.md"};function h(o,t,s,n,f,l){return e(),a("div",null,[...t[0]||(t[0]=[r('<h1 id="reviews" tabindex="-1">Reviews <a class="header-anchor" href="#reviews" aria-label="Permalink to “Reviews”">​</a></h1><p>本页汇总全部「复习文档」：聚焦题目背后的 思路拆解 / 原理推导 / 易错点 / 可扩展方向。建议：刷题当天完成基础实现，隔日用 5~10 分钟阅读与补充复习 → 形成“二次记忆 + 方法论沉淀”。</p><h2 id="🗃-题目索引" tabindex="-1">🗃 题目索引 <a class="header-anchor" href="#🗃-题目索引" aria-label="Permalink to “🗃 题目索引”">​</a></h2><table tabindex="0"><thead><tr><th>Day</th><th>链接</th><th>标题</th><th>标签</th></tr></thead><tbody><tr><td>01</td><td><a href="./01">Day 01</a></td><td>归并排序（JS 实现与分治递归）</td><td>分治 / 排序</td></tr><tr><td>02</td><td><a href="./02">Day 02</a></td><td>generator 转 async 封装流程</td><td>异步转换</td></tr><tr><td>03</td><td><a href="./03">Day 03</a></td><td>精简版 Vue 响应式机制实现</td><td>响应式 / Proxy</td></tr><tr><td>04</td><td><a href="./04">Day 04</a></td><td>sum() 柯里化与类型转换判等</td><td>柯里化 / 函数式</td></tr><tr><td>05</td><td><a href="./05">Day 05</a></td><td>深拷贝实现（循环 / 各类内建）</td><td>内存结构 / 引用处理</td></tr><tr><td>06</td><td><a href="./06">Day 06</a></td><td>Array.from 语义与 Polyfill</td><td>规范 / 可迭代</td></tr><tr><td>07</td><td><a href="./07">Day 07</a></td><td>中间件机制（链式与错误传播）</td><td>设计模式 / 控制流</td></tr><tr><td>08</td><td><a href="./08">Day 08</a></td><td>Promise 核心实现（状态/链式）</td><td>异步 / 微任务</td></tr><tr><td>09</td><td><a href="./09">Day 09</a></td><td>二叉树垂直遍历（多维排序）</td><td>树 / 坐标排序</td></tr><tr><td>10</td><td><a href="./10">Day 10</a></td><td>call/apply/bind/new/instanceof 实现</td><td>this / 原型链</td></tr><tr><td>11</td><td><a href="./11">Day 11</a></td><td>Fiber 副作用收集遍历模型</td><td>Fiber / 深度遍历</td></tr><tr><td>12</td><td><a href="./12">Day 12</a></td><td>compose 函数组合与异步串联</td><td>函数管道</td></tr><tr><td>13</td><td><a href="./13">Day 13</a></td><td>Proxy 链式加法 add 题解析</td><td>Proxy / 隐式转换</td></tr><tr><td>14</td><td><a href="./14">Day 14</a></td><td>Observable 基础发布订阅</td><td>观察者模式</td></tr><tr><td>15</td><td><a href="./15">Day 15</a></td><td>myCall 行为与 this 绑定边界</td><td>this / 规范细节</td></tr><tr><td>16</td><td><a href="./16">Day 16</a></td><td>千位分隔符格式化策略</td><td>字符串处理</td></tr><tr><td>17</td><td><a href="./17">Day 17</a></td><td>数组去重与稀疏位处理</td><td>数组 / 去重策略</td></tr><tr><td>18</td><td><a href="./18">Day 18</a></td><td>迷你 Jest 断言机制</td><td>测试 / 断言</td></tr></tbody></table><h2 id="🤝-参与方式" tabindex="-1">🤝 参与方式 <a class="header-anchor" href="#🤝-参与方式" aria-label="Permalink to “🤝 参与方式”">​</a></h2><p>提交：<code>feat(review): add Day XX review</code>；补充修订：<code>docs(review): refine Day XX xxx</code>。内容聚焦“解释为什么 / 如何迁移到更通用的套路”，少贴纯代码大段，代码应服务叙述。</p>',6)])])}const D=d(i,[["render",h]]);export{c as __pageData,D as default};
