import{_ as i,c as a,o as l,ah as n}from"./chunks/framework.CIgZr41i.js";const c=JSON.parse('{"title":"📦 Problems 压缩包功能","description":"","frontmatter":{},"headers":[],"relativePath":"others/PROBLEMS_ARCHIVE.md","filePath":"others/PROBLEMS_ARCHIVE.md","lastUpdated":1757215934000}'),e={name:"others/PROBLEMS_ARCHIVE.md"};function h(t,s,p,r,k,d){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="📦-problems-压缩包功能" tabindex="-1">📦 Problems 压缩包功能 <a class="header-anchor" href="#📦-problems-压缩包功能" aria-label="Permalink to “📦 Problems 压缩包功能”">​</a></h1><h2 id="🎯-功能概述" tabindex="-1">🎯 功能概述 <a class="header-anchor" href="#🎯-功能概述" aria-label="Permalink to “🎯 功能概述”">​</a></h2><p>从现在开始，每次 Release 都会自动生成一个只包含 <code>problems</code> 文件夹的压缩包，方便用户单独下载题目和复习资料，而无需下载整个项目。</p><h2 id="✨-主要特性" tabindex="-1">✨ 主要特性 <a class="header-anchor" href="#✨-主要特性" aria-label="Permalink to “✨ 主要特性”">​</a></h2><h3 id="_1-🤖-自动生成" tabindex="-1">1. 🤖 自动生成 <a class="header-anchor" href="#_1-🤖-自动生成" aria-label="Permalink to “1. 🤖 自动生成”">​</a></h3><ul><li>每次执行 <code>pnpm run release</code> 时自动创建</li><li>文件名格式：<code>problems-v{版本号}.zip</code></li><li>自动上传到 GitHub Release</li></ul><h3 id="_2-📁-包含内容" tabindex="-1">2. 📁 包含内容 <a class="header-anchor" href="#_2-📁-包含内容" aria-label="Permalink to “2. 📁 包含内容”">​</a></h3><p>压缩包只包含 <code>problems/</code> 文件夹，其中包括：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>problems/</span></span>
<span class="line"><span>├── days/              # 每日题目</span></span>
<span class="line"><span>│   ├── Day 01/       # 归并排序</span></span>
<span class="line"><span>│   ├── Day 02/       # 生成器转异步</span></span>
<span class="line"><span>│   ├── Day 03/       # Vue 响应式</span></span>
<span class="line"><span>│   ├── ...           # 更多题目</span></span>
<span class="line"><span>│   └── Day 18/       # 最新题目</span></span>
<span class="line"><span>└── review/           # 技术复习资料</span></span>
<span class="line"><span>    ├── 01.md         # 对应的技术知识点</span></span>
<span class="line"><span>    ├── 02.md</span></span>
<span class="line"><span>    ├── ...</span></span>
<span class="line"><span>    └── 18.md</span></span></code></pre></div><h3 id="_3-🚫-排除内容" tabindex="-1">3. 🚫 排除内容 <a class="header-anchor" href="#_3-🚫-排除内容" aria-label="Permalink to “3. 🚫 排除内容”">​</a></h3><p>压缩包会自动排除：</p><ul><li><code>.DS_Store</code> 文件（macOS 系统文件）</li><li><code>node_modules/</code> 目录</li><li><code>.git/</code> 目录</li><li>其他项目配置文件</li></ul><h2 id="🛠️-使用方式" tabindex="-1">🛠️ 使用方式 <a class="header-anchor" href="#🛠️-使用方式" aria-label="Permalink to “🛠️ 使用方式”">​</a></h2><h3 id="自动生成-推荐" tabindex="-1">自动生成（推荐） <a class="header-anchor" href="#自动生成-推荐" aria-label="Permalink to “自动生成（推荐）”">​</a></h3><p>作为发布流程的一部分，压缩包会自动生成：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 完整发布流程，包含压缩包生成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span></span></code></pre></div><h3 id="手动生成" tabindex="-1">手动生成 <a class="header-anchor" href="#手动生成" aria-label="Permalink to “手动生成”">​</a></h3><p>如果需要单独生成压缩包：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 Vite 构建生成 problems 压缩包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-problems-archive</span></span></code></pre></div><blockquote><p>💡 <strong>技术实现</strong>: 使用 Vite 构建工具和自定义插件实现，支持自动清理和高效压缩。</p></blockquote><h3 id="下载使用" tabindex="-1">下载使用 <a class="header-anchor" href="#下载使用" aria-label="Permalink to “下载使用”">​</a></h3><p>用户可以从 GitHub Release 页面下载：</p><ol><li><strong>完整项目压缩包</strong> - GitHub 自动生成的源码包</li><li><strong>Problems 压缩包</strong> - <code>problems-v{版本}.zip</code>，仅包含题目文件</li></ol><h2 id="📋-发布流程集成" tabindex="-1">📋 发布流程集成 <a class="header-anchor" href="#📋-发布流程集成" aria-label="Permalink to “📋 发布流程集成”">​</a></h2><h3 id="发布时的自动化步骤" tabindex="-1">发布时的自动化步骤 <a class="header-anchor" href="#发布时的自动化步骤" aria-label="Permalink to “发布时的自动化步骤”">​</a></h3><ol><li><strong>运行测试</strong> - 确保代码质量</li><li><strong>生成版本号</strong> - 根据 conventional commits</li><li><strong>生成 CHANGELOG</strong> - 自动生成更改日志</li><li><strong>生成发布说明</strong> - 格式化的 release notes</li><li><strong>📦 创建 Problems 压缩包</strong> - 新增步骤</li><li><strong>创建 Git 标签</strong> - 版本标记</li><li><strong>推送到 GitHub</strong> - 同步代码</li><li><strong>创建 GitHub Release</strong> - 包含压缩包附件</li></ol><h3 id="发布说明格式" tabindex="-1">发布说明格式 <a class="header-anchor" href="#发布说明格式" aria-label="Permalink to “发布说明格式”">​</a></h3><p>发布说明会自动包含下载说明：</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 📥 下载</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **📦 完整项目**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 通过 GitHub Release 自动生成的源码压缩包</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **📁 题目合集**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`problems-v1.2.0.zip\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - 仅包含每日题目和复习资料</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **🔗 在线浏览**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 直接浏览仓库获取最新内容</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">&gt; 💡 </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**推荐**</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">: 如果你只需要题目文件，下载 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`problems-v1.2.0.zip\`</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> 即可。</span></span></code></pre></div><h2 id="🔧-技术实现" tabindex="-1">🔧 技术实现 <a class="header-anchor" href="#🔧-技术实现" aria-label="Permalink to “🔧 技术实现”">​</a></h2><h3 id="核心文件" tabindex="-1">核心文件 <a class="header-anchor" href="#核心文件" aria-label="Permalink to “核心文件”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>vite.config.problems.ts        # Vite 配置文件（压缩包生成）</span></span>
<span class="line"><span>.release-it.json               # 包含压缩包配置</span></span>
<span class="line"><span>package.json                   # 包含相关脚本</span></span></code></pre></div><h3 id="配置详情" tabindex="-1">配置详情 <a class="header-anchor" href="#配置详情" aria-label="Permalink to “配置详情”">​</a></h3><p>在 <code>.release-it.json</code> 中的配置：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;github&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;assets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist/problems-v\${version}.zip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;after:bump&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;node scripts/generate-release-notes.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;pnpm run create-problems-archive&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="vite-插件实现" tabindex="-1">Vite 插件实现 <a class="header-anchor" href="#vite-插件实现" aria-label="Permalink to “Vite 插件实现”">​</a></h3><p>使用 Vite 自定义插件实现压缩包生成：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite.config.problems.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;problems-archiver&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buildStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 1. 清理 dist 目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 2. 检查 problems 文件夹</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 3. 使用 archiver 创建 ZIP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 4. 排除不必要文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="vite-构建特性" tabindex="-1">Vite 构建特性 <a class="header-anchor" href="#vite-构建特性" aria-label="Permalink to “Vite 构建特性”">​</a></h3><ul><li><strong>🧹 自动清理</strong> - 构建前自动清理 <code>dist/</code> 目录</li><li><strong>📦 高效压缩</strong> - 使用 archiver 库实现高效 ZIP 压缩</li><li><strong>🎯 智能排除</strong> - 自动排除系统文件和不必要的内容</li><li><strong>📊 构建报告</strong> - 显示压缩包大小和包含内容</li><li><strong>⚡ 快速构建</strong> - 基于 Vite 的高性能构建流程</li></ul><h2 id="📊-使用统计" tabindex="-1">📊 使用统计 <a class="header-anchor" href="#📊-使用统计" aria-label="Permalink to “📊 使用统计”">​</a></h2><p>每次生成压缩包时会显示：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>📦 正在创建 problems 文件夹压缩包...</span></span>
<span class="line"><span>✅ 压缩包已创建: /path/to/problems-v1.2.0.zip</span></span>
<span class="line"><span>📁 包含内容: problems/ 文件夹</span></span>
<span class="line"><span>📊 压缩包大小: 176K</span></span></code></pre></div><h2 id="🎯-用户场景" tabindex="-1">🎯 用户场景 <a class="header-anchor" href="#🎯-用户场景" aria-label="Permalink to “🎯 用户场景”">​</a></h2><h3 id="学习者" tabindex="-1">学习者 <a class="header-anchor" href="#学习者" aria-label="Permalink to “学习者”">​</a></h3><ul><li>只需要题目和复习资料</li><li>不关心项目构建和配置</li><li>希望快速获取学习内容</li></ul><h3 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to “贡献者”">​</a></h3><ul><li>需要完整项目进行开发</li><li>可以选择下载完整源码</li><li>使用 git clone 获取最新代码</li></ul><h3 id="教师-培训师" tabindex="-1">教师/培训师 <a class="header-anchor" href="#教师-培训师" aria-label="Permalink to “教师/培训师”">​</a></h3><ul><li>批量分发题目给学员</li><li>不包含项目配置，避免混淆</li><li>专注于学习内容本身</li></ul><h2 id="🔍-故障排除" tabindex="-1">🔍 故障排除 <a class="header-anchor" href="#🔍-故障排除" aria-label="Permalink to “🔍 故障排除”">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to “常见问题”">​</a></h3><ol><li><p><strong>压缩包生成失败</strong></p><ul><li>确保系统有 <code>zip</code> 命令</li><li>检查 <code>problems/</code> 文件夹是否存在</li><li>确保有写入 <code>dist/</code> 目录的权限</li></ul></li><li><p><strong>GitHub Release 上传失败</strong></p><ul><li>检查 GitHub Token 权限</li><li>确保压缩包文件存在</li><li>查看 release-it 日志</li></ul></li><li><p><strong>压缩包过大</strong></p><ul><li>检查是否包含了不必要的文件</li><li>验证排除规则是否正确工作</li></ul></li></ol><h3 id="调试命令" tabindex="-1">调试命令 <a class="header-anchor" href="#调试命令" aria-label="Permalink to “调试命令”">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 手动测试压缩包生成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-problems-archive</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查生成的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看压缩包内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist/problems-v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.zip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压到临时目录验证</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../dist/problems-v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.zip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span></span></code></pre></div><h2 id="📈-未来计划" tabindex="-1">📈 未来计划 <a class="header-anchor" href="#📈-未来计划" aria-label="Permalink to “📈 未来计划”">​</a></h2><ul><li>支持多种压缩格式（tar.gz, 7z）</li><li>添加压缩包内容校验</li><li>支持自定义排除规则</li><li>添加压缩包完整性检查</li></ul>`,57)])])}const g=i(e,[["render",h]]);export{c as __pageData,g as default};
