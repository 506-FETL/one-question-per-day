import{_ as a,c as i,o as t,ah as h}from"./chunks/framework.CQPaoDZe.js";const o=JSON.parse('{"title":"Day 16","description":"","frontmatter":{},"headers":[],"relativePath":"days/Day-16.md","filePath":"days/Day-16.md","lastUpdated":1755921294000}'),e={name:"days/Day-16.md"};function n(l,s,k,d,p,r){return t(),i("div",null,[...s[0]||(s[0]=[h(`<h1 id="day-16" tabindex="-1">Day 16 <a class="header-anchor" href="#day-16" aria-label="Permalink to “Day 16”">​</a></h1><h1 id="请实现一个给数字添加千位分隔符的函数。" tabindex="-1">请实现一个给数字添加千位分隔符的函数。 <a class="header-anchor" href="#请实现一个给数字添加千位分隔符的函数。" aria-label="Permalink to “请实现一个给数字添加千位分隔符的函数。”">​</a></h1><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addComma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addComma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;1,000&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addComma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345678</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;-12,345,678&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addComma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345678.12345</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;12,345,678.12345&#39;</span></span></code></pre></div><p>传入的都是有效的数字，不用担心非法的输入。</p><h2 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to “代码”">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>路径</th></tr></thead><tbody><tr><td>JS 答案</td><td>problems/days/Day 16/answer.js</td></tr></tbody></table>`,6)])])}const E=a(e,[["render",n]]);export{o as __pageData,E as default};
