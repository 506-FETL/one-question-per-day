name: 发布后处理

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  post-release:
    # 仅在PR被合并且PR标题包含"Release"时运行
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'Release')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 安装依赖
        run: pnpm install --frozen-lockfile

      - name: 提取版本号
        id: extract-version
        run: |
          # 从package.json提取版本号
          VERSION=$(node -p "require('./package.json').version")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "提取到版本号: v$VERSION"

      - name: 统计项目信息
        id: stats
        run: |
          # 统计题目数量
          TOTAL_DAYS=$(find problems/days -type d -name "Day *" | wc -l | tr -d ' ')
          echo "total-days=$TOTAL_DAYS" >> $GITHUB_OUTPUT

          # 统计贡献者
          CONTRIBUTORS=$(git shortlog -sn --all | wc -l | tr -d ' ')
          echo "contributors=$CONTRIBUTORS" >> $GITHUB_OUTPUT

      - name: 生成 Release Notes
        id: release-notes
        run: |
          # 获取最新的更新文档
          LATEST_UPDATE=$(find updates -name "*.md" -not -name "README.md" | sort -r | head -1)

          # 开始构建 Release Notes
          cat > release-notes.md << 'EOF'
          # 📚 506实验室每日一题 Release

          ## 🎯 本次更新概览

          EOF

          # 如果有更新文档，包含其内容
          if [ -f "$LATEST_UPDATE" ]; then
            echo "从 $LATEST_UPDATE 生成 Release Notes..."
            echo "" >> release-notes.md
            echo "## 📝 详细更新内容" >> release-notes.md
            echo "" >> release-notes.md
            cat "$LATEST_UPDATE" >> release-notes.md
            echo "" >> release-notes.md
          fi

          # 添加项目统计
          echo "## 📊 项目统计" >> release-notes.md
          echo "" >> release-notes.md
          echo "- 📚 总题目数量: **${{ steps.stats.outputs.total-days }}** 天" >> release-notes.md
          echo "- 👥 贡献者数量: **${{ steps.stats.outputs.contributors }}** 人" >> release-notes.md
          echo "" >> release-notes.md

          # 添加技术栈信息
          echo "## 🛠️ 技术栈" >> release-notes.md
          echo "" >> release-notes.md
          echo "- **语言**: JavaScript, TypeScript" >> release-notes.md
          echo "- **测试**: Vitest" >> release-notes.md
          echo "- **代码质量**: ESLint, Prettier" >> release-notes.md
          echo "- **包管理**: pnpm" >> release-notes.md
          echo "" >> release-notes.md

          # 添加使用说明
          echo "## 🚀 快速开始" >> release-notes.md
          echo "" >> release-notes.md
          echo "\`\`\`bash" >> release-notes.md
          echo "# 克隆项目" >> release-notes.md
          echo "git clone https://github.com/506-FETL/one-question-per-day.git" >> release-notes.md
          echo "" >> release-notes.md
          echo "# 安装依赖" >> release-notes.md
          echo "pnpm install" >> release-notes.md
          echo "" >> release-notes.md
          echo "# 运行测试" >> release-notes.md
          echo "pnpm test" >> release-notes.md
          echo "" >> release-notes.md
          echo "# 开发模式（包含代码检查、格式化、测试）" >> release-notes.md
          echo "pnpm dev" >> release-notes.md
          echo "\`\`\`" >> release-notes.md
          echo "" >> release-notes.md

          # 添加贡献指南链接
          echo "## 🤝 参与贡献" >> release-notes.md
          echo "" >> release-notes.md
          echo "欢迎加入506实验室每日一题！请查看 [README.md](https://github.com/506-FETL/one-question-per-day/blob/main/README.md) 了解详细的参与指南。" >> release-notes.md
          echo "" >> release-notes.md

          # 输出到变量
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release-notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 检查 Tag 是否存在
        id: check-tag
        run: |
          if git rev-parse "${{ steps.extract-version.outputs.version }}" >/dev/null 2>&1; then
            echo "tag-exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag ${{ steps.extract-version.outputs.version }} 已存在"
          else
            echo "tag-exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag ${{ steps.extract-version.outputs.version }} 不存在，可以创建"
          fi

      - name: 创建 Git Tag
        if: steps.check-tag.outputs.tag-exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ steps.extract-version.outputs.version }} -m "Release ${{ steps.extract-version.outputs.version }}"
          git push origin ${{ steps.extract-version.outputs.version }}
          echo "🏷️ Git Tag ${{ steps.extract-version.outputs.version }} 创建成功"

      - name: 创建 GitHub Release
        if: steps.check-tag.outputs.tag-exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract-version.outputs.version }}
          release_name: '📚 ${{ steps.extract-version.outputs.version }} - 506实验室每日一题'
          body: ${{ steps.release-notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: 发布成功通知
        if: steps.check-tag.outputs.tag-exists == 'false'
        run: |
          echo "✅ 发布完成!"
          echo "📚 项目: 506实验室每日一题"
          echo "🏷️ 版本: ${{ steps.extract-version.outputs.version }}"
          echo "📊 总题目数: ${{ steps.stats.outputs.total-days }} 天"
          echo "👥 贡献者: ${{ steps.stats.outputs.contributors }} 人"
          echo "🎉 GitHub Release 已创建完成"

      - name: 跳过发布通知
        if: steps.check-tag.outputs.tag-exists == 'true'
        run: |
          echo "ℹ️ Tag ${{ steps.extract-version.outputs.version }} 已存在，跳过发布"
          echo "📚 项目: 506实验室每日一题"
          echo "🏷️ 现有版本: ${{ steps.extract-version.outputs.version }}"
